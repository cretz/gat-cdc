// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
//This source code was auto-generated by MonoXSD
//
namespace Gat.Common.Project.Model {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0", IsNullable=false)]
    public partial class project {
        
        private string nameField;
        
        private conditional[] conditionalField;
        
        /// <remarks>
///
///                    This is the name off the project. It is required and
///                    must be unique within the database instance.
///                
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks>
///
///                        This is the collection of conditionals for this project.
///                    
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute("conditional")]
        public conditional[] conditional {
            get {
                return this.conditionalField;
            }
            set {
                this.conditionalField = value;
            }
        }
    }
    
    /// <remarks>
///
///                This defines a conditional. Conditionals check the "when" statement and, if applicable,
///                apply the actions present in the "then" statement.
///            
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0")]
    public partial class conditional {
        
        private string nameField1;
        
        private bool applyToNewSchemaField;
        
        private conditionalContainer whenField;
        
        private then thenField;
        
        /// <remarks>
///
///                    This is the name of this conditional. It must be unique
///                    throughout the project. If this is not provided, the
///                    name will be "Conditional#" where # is the number of the
///                    conditional, starting at 1, as it is ordered in this project.                
///                
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public string name {
            get {
                return this.nameField1;
            }
            set {
                this.nameField1 = value;
            }
        }
        
        /// <remarks>
///
///                    If true, this conditional will also be applied to any new schema elements that appear
///                    in the database this project is applied to. The default is false.
///                
///</remarks>
        [System.ComponentModel.DefaultValue(false)]
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public bool applyToNewSchema {
            get {
                return this.applyToNewSchemaField;
            }
            set {
                this.applyToNewSchemaField = value;
            }
        }
        
        /// <remarks>
///
///                        This contains the conditionals that must be satisfied before the
///                        actions contained within the "then" section. If this is not
///                        present, every item in the database will have the actions executed.
///                    
///</remarks>
        public conditionalContainer when {
            get {
                return this.whenField;
            }
            set {
                this.whenField = value;
            }
        }
        
        /// <remarks/>
        public then then {
            get {
                return this.thenField;
            }
            set {
                this.thenField = value;
            }
        }
    }
    
    /// <remarks>
///
///                Container for conditional statements. This can contain an unlimited number of 
///                inner conditionals.
///            
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0")]
    public partial class conditionalContainer {
        
        private ItemsChoiceType[] itemsElementNameField;
        
        private object[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("any", Type=typeof(conditionalContainer))]
        [System.Xml.Serialization.XmlElementAttribute("none", Type=typeof(conditionalContainer))]
        [System.Xml.Serialization.XmlElementAttribute("all", Type=typeof(conditionalContainer))]
        [System.Xml.Serialization.XmlElementAttribute("actionEquals", Type=typeof(actionEquals))]
        [System.Xml.Serialization.XmlElementAttribute("schemaEquals", Type=typeof(valueEquals))]
        [System.Xml.Serialization.XmlElementAttribute("tableEquals", Type=typeof(valueEquals))]
        [System.Xml.Serialization.XmlElementAttribute("columnEquals", Type=typeof(valueEquals))]
        [System.Xml.Serialization.XmlChoiceIdentifier("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0", IncludeInSchema=false)]
    public enum ItemsChoiceType {
        
        /// <remarks/>
        any,
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        actionEquals,
        
        /// <remarks/>
        schemaEquals,
        
        /// <remarks/>
        tableEquals,
        
        /// <remarks/>
        columnEquals,
    }
    
    /// <remarks>
///
///                This is a conditional that is true if the given action is the current action.
///            
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0")]
    public partial class actionEquals {
        
        private action actionField;
        
        /// <remarks>
///
///                    The action to test.
///                
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public action action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
    }
    
    /// <remarks>
///
///                This is the action that has occurred within a particular event.
///            
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0")]
    public enum action {
        
        /// <remarks/>
        INSERT,
        
        /// <remarks/>
        UPDATE,
        
        /// <remarks/>
        DELETE,
        
        /// <remarks/>
        CREATE,
        
        /// <remarks/>
        ALTER,
        
        /// <remarks/>
        DROP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0")]
    public partial class valueEquals {
        
        private string valueField;
        
        private bool regexField;
        
        /// <remarks>
///
///                    This is a conditional that is true if the given value is the current value.
///                
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks>
///
///                    If true, the given value will be evaluated using regular expressions. This
///                    is false by default.
///                
///</remarks>
        [System.ComponentModel.DefaultValue(false)]
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public bool regex {
            get {
                return this.regexField;
            }
            set {
                this.regexField = value;
            }
        }
    }
    
    /// <remarks>
///
///                Set of actions to be executed when conditionals are satisfied. 
///            
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0")]
    public partial class then {
        
        private ItemsChoiceType1[] itemsElementNameField1;
        
        private externalAction[] itemsField1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType1[] ItemsElementName {
            get {
                return this.itemsElementNameField1;
            }
            set {
                this.itemsElementNameField1 = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("thriftSend", Type=typeof(hostAction))]
        [System.Xml.Serialization.XmlElementAttribute("protoSend", Type=typeof(hostAction))]
        [System.Xml.Serialization.XmlElementAttribute("jsonHttpPost", Type=typeof(urlAction))]
        [System.Xml.Serialization.XmlElementAttribute("xmlHttpPost", Type=typeof(urlAction))]
        [System.Xml.Serialization.XmlElementAttribute("socketSend", Type=typeof(socketAction))]
        [System.Xml.Serialization.XmlElementAttribute("amqpSend", Type=typeof(asyncOnlySocketAction))]
        [System.Xml.Serialization.XmlElementAttribute("zeromqSend", Type=typeof(asyncOnlySocketAction))]
        [System.Xml.Serialization.XmlElementAttribute("nativeMethod", Type=typeof(nativeMethodAction))]
        [System.Xml.Serialization.XmlElementAttribute("nativeCode", Type=typeof(nativeCodeAction))]
        [System.Xml.Serialization.XmlChoiceIdentifier("ItemsElementName")]
        public externalAction[] Items {
            get {
                return this.itemsField1;
            }
            set {
                this.itemsField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ItemsChoiceType", Namespace="http://www.gatcdc.org/schema/project/1.0", IncludeInSchema=false)]
    public enum ItemsChoiceType1 {
        
        /// <remarks/>
        thriftSend,
        
        /// <remarks/>
        protoSend,
        
        /// <remarks/>
        jsonHttpPost,
        
        /// <remarks/>
        xmlHttpPost,
        
        /// <remarks/>
        socketSend,
        
        /// <remarks/>
        amqpSend,
        
        /// <remarks/>
        zeromqSend,
        
        /// <remarks/>
        nativeMethod,
        
        /// <remarks/>
        nativeCode,
    }
    
    /// <remarks>
///
///                Base action for all actions that require a host and a port.
///            
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(socketAction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(asyncOnlySocketAction))]
    public partial class hostAction : externalAction {
        
        private string hostField;
        
        private int portField;
        
        /// <remarks>
///
///                            The hostname or IP for the action.
///                        
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public string host {
            get {
                return this.hostField;
            }
            set {
                this.hostField = value;
            }
        }
        
        /// <remarks>
///
///                            The port for the action.
///                        
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public int port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
    }
    
    /// <remarks>
///
///                Base action for all actions.
///            
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(nativeCodeAction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(nativeMethodAction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(hostAction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(socketAction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(asyncOnlySocketAction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(urlAction))]
    public partial class externalAction {
        
        private bool asyncField;
        
        private bool rollbackOnFailField;
        
        private bool includeOriginalSqlField;
        
        private bool includeRowSetField;
        
        /// <remarks>
///
///                    If true, the action will be executed asynchronously. When
///                    actions are executed asynchronously, many event responses
///                    will have no effect (e.g. rollback). The default is false.
///                
///</remarks>
        [System.ComponentModel.DefaultValue(false)]
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public bool async {
            get {
                return this.asyncField;
            }
            set {
                this.asyncField = value;
            }
        }
        
        /// <remarks>
///
///                    If true, this will rollback the execution on action failure.
///                    Some DDL events cannot be rolled back. If async is true,
///                    this will only rollback if the action could not be started;
///                    The response will not matter. The default is false.
///                
///</remarks>
        [System.ComponentModel.DefaultValue(false)]
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public bool rollbackOnFail {
            get {
                return this.rollbackOnFailField;
            }
            set {
                this.rollbackOnFailField = value;
            }
        }
        
        /// <remarks>
///
///                    If true, the original SQL will be sent as part of the event.
///                    The default is false.
///                
///</remarks>
        [System.ComponentModel.DefaultValue(false)]
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public bool includeOriginalSql {
            get {
                return this.includeOriginalSqlField;
            }
            set {
                this.includeOriginalSqlField = value;
            }
        }
        
        /// <remarks>
///
///                    If true, the affected rows will be sent as part of the event.
///                    The default is false.
///                
///</remarks>
        [System.ComponentModel.DefaultValue(false)]
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public bool includeRowSet {
            get {
                return this.includeRowSetField;
            }
            set {
                this.includeRowSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0")]
    public partial class nativeCodeAction : externalAction {
        
        private string languageField;
        
        private string[] libraryField;
        
        private string codeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("library")]
        public string[] library {
            get {
                return this.libraryField;
            }
            set {
                this.libraryField = value;
            }
        }
        
        /// <remarks/>
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0")]
    public partial class nativeMethodAction : externalAction {
        
        private string classField;
        
        private string methodField;
        
        private string[] libraryField1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public string method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("library")]
        public string[] library {
            get {
                return this.libraryField1;
            }
            set {
                this.libraryField1 = value;
            }
        }
    }
    
    /// <remarks>
///
///                Base action for all socket based actions.
///            
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(asyncOnlySocketAction))]
    public partial class socketAction : hostAction {
        
        private dataFormat dataFormatField;
        
        /// <remarks>
///
///                            The format of bytes to send over the socket.
///                        
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public dataFormat dataFormat {
            get {
                return this.dataFormatField;
            }
            set {
                this.dataFormatField = value;
            }
        }
    }
    
    /// <remarks>
///
///                Format of data to send over a socket.
///            
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0")]
    public enum dataFormat {
        
        /// <remarks>
///
///                        Thrift formatted bytes.
///                    
///</remarks>
        THIFT,
        
        /// <remarks>
///
///                        Protocol Buffers formatted bytes.
///                    
///</remarks>
        PROTO,
        
        /// <remarks>
///
///                        JSON formatted UTF8 string in bytes.
///                    
///</remarks>
        JSON,
        
        /// <remarks>
///
///                        XML formatted UTF8 string in bytes.
///                    
///</remarks>
        XML,
        
        /// <remarks>
///
///                        Serialized event object in the native implementation
///                        language of the vendor.
///                    
///</remarks>
        NATIVE_SERIALIZED,
    }
    
    /// <remarks>
///
///                Base action for all socket actions that are asynchronous only.
///            
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0")]
    public partial class asyncOnlySocketAction : socketAction {
    }
    
    /// <remarks>
///
///                Base action for all URL based actions. 
///            
///</remarks>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.gatcdc.org/schema/project/1.0")]
    public partial class urlAction : externalAction {
        
        private string pathField;
        
        private string usernameField;
        
        private string passwordField;
        
        /// <remarks>
///
///                            The full URL path. This should include the
///                            protocol (i.e. http or https).
///                        
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public string path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks>
///
///                            Username if required for the URL.
///                        
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks>
///
///                            Password if required for the URL.
///                        
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
}
